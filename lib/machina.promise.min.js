/*
	machina.promise - A lightweight Promises/A compliant implementation for projects already using the machina state machine library.
	version:	0.0.9
	author:		Doug Neiner <dneiner@appendto.com>
	copyright:	2012 appendTo, LLC
	license:	Dual licensed
				MIT (http://opensource.org/licenses/mit-license)
				GPL (http://opensource.org/licenses/GPL-2.0)
*/
(function(e,t){typeof module=="object"&&module.exports?module.exports=t(require("underscore"),require("machina")):typeof define=="function"&&define.amd?define(["underscore","machina"],function(n,r){return t(n,r,e)}):e.machina.Promise=t(e._,e.machina,e)})(this,function(e,t,n,r){var i=t.Fsm.extend({initialState:"unfulfilled",initialize:function(){e.bindAll(this)},reject:function(e){this.handle("process",{action:"failed",data:e})},fulfill:function(e){this.handle("process",{action:"fulfilled",data:e})},then:function(t,n){var r=this,s=new i,o=function(){r.off("fulfilled",o),r.off("failed",o);var e=r.state==="fulfilled",u=e?t:n,a;if(u){try{a=u.apply(null,arguments)}catch(f){s.reject.call(null,f);return}i.useExtensions&&a&&a.then?a.then(s.fulfill,s.reject):s.fulfill.call(null,a)}else s[e?"fulfill":"reject"].apply(null,arguments)};return this.on("fulfilled",o),this.on("failed",o),i.useExtensions?e.defer(function(){r.handle("then")}):this.handle("then"),s},states:{unfulfilled:{process:function(e){this._data=e.data,this.transition(e.action),this.handle("then")}},fulfilled:{then:function(){this.emit("fulfilled",this._data)}},failed:{then:function(){this.emit("failed",this._data)}}}});return i.useExtensions=!0,i})